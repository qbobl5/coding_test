import java.util.*;

class Solution {
    static List<List<Integer>> listArr;
    static boolean[] chk;
    static int cnt=0;
    
    public static void dfs(int idx) {
        if(idx==listArr.size()) return;
        
        for(int i:listArr.get(idx)) {
            if(chk[i]) continue;
            chk[i]=true;
            dfs(i);
        }
    }
    
    public int solution(int n, int[][] computers) {
        listArr=new ArrayList<>();
        chk=new boolean[n];
        
        for(int i=0;i<computers.length;i++) {
            int[] arr=computers[i];
            List<Integer> list=new ArrayList<>();
            for(int j=0;j<arr.length;j++) {
                if(i==j) continue;
                if(arr[j]==1) list.add(j);
            }
            listArr.add(list);
        }
        
        for(int i=0;i<listArr.size();i++) {
            if(chk[i]) continue;
            cnt++;
            dfs(i);
        }
        return cnt;
    }
}
